<project name="cutplace" default="bdist" basedir=".">
    <description>Buildfile for cutplace</description>

    <!-- Set global properties for this build. -->
    <property name="source" location="source" />
    <property name="tests.dir" location="tests" />
    <property name="tests-input.dir" location="${tests.dir}/input" />
    <property name="tests-input-icds.dir" location="${tests-input.dir}/icds" />
    <property name="build" location="build" />
    <property name="dist" location="dist" />
    <property name="external.dir" location="external" />
    <property name="site.dir" location="site" />
    <property name="test_all.py" location="${source}/cutplace/test_all.py" />

    <xmlcatalog id="catalogs">
        <dtd location="dtds/docbook-xml/docbookx.dtd" publicId="-//OASIS//DTD DocBook XML V4.5//EN" />
        <dtd location="dtds/html4/loose.dtd" publicId="-//W3C//DTD HTML 4.01 Transitional//EN" />
        <dtd location="dtds/xhtml/xhtml1-strict.dtd" publicId="-//W3C//DTD XHTML 1.0 Strict//EN" />
        <dtd location="dtds/xhtml/xhtml1-transitional.dtd" publicId="-//W3C//DTD XHTML 1.0 Transitional//EN" />
    </xmlcatalog>

    <target name="bdist" depends="version, user-guide" description="build binary distribution">
        <tstamp />
        <exec executable="python">
            <arg value="setup.py" />
            <arg value="bdist" />
        </exec>
    </target>

    <target name="sdist" depends="bdist" description="build source distribution">
        <!-- Delete Mac OS X Finder cache files. -->
        <delete>
          <fileset defaultexcludes="false" dir="." includes="**/.DS_Store"/>
        </delete>
        <exec executable="python">
            <arg value="setup.py" />
            <arg value="sdist" />
            <arg value="--force-manifest" />
	    	<arg value="--formats=zip" />
        </exec>
    </target>

    <target name="bdist_egg" depends="version, user-guide" description="build binary distribution">
        <tstamp />
        <exec executable="python">
            <arg value="setup.py" />
            <arg value="bdist_egg" />
        </exec>
    </target>

    <target name="bdist_egg_upload" depends="version, user-guide" description="build binary distribution and upload it to PyPI">
        <tstamp />
        <exec executable="python">
            <arg value="setup.py" />
            <arg value="bdist_egg" />
            <arg value="upload" />
        </exec>
    </target>

	<target name="testdata" description="generate test data">
        <exec executable="python">
            <arg value="${source}/cutplace/ods.py" />
            <arg value="${tests-input-icds.dir}/customers.ods" />
            <arg value="${tests-input-icds.dir}/customers.csv" />
        </exec>
	</target>

    <target name="test" depends="version, testdata" description="run test suite">
        <exec executable="python">
            <arg value="${test_all.py}" />
        </exec>
    </target>

    <target name="clean" description="clean up">
        <!-- Delete files and folders generated by target "bdist". -->
        <delete dir="${build}" />
        <delete dir="${dist}" />
        <delete dir="${source}" includes="**/*.pyc" />
    </target>

    <target description="update version information" name="version">
        <xslt in="version.xml" out="${source}/cutplace/version.py" style="${source}/xml/version-py.xsl" />
        <xslt in="version.xml" out="setup.py" style="${source}/xml/version-setup-py.xsl" />
    </target>

    <target name="site" depends="user-guide" description="build web site">
    </target>

    <target name="sitebase">
        <mkdir dir="${site.dir}/images" />
        <copy file="${source}/site/style.css" todir="${site.dir}" />
        <copy todir="${site.dir}/images">
            <fileset dir="${source}/site/images" includes="*.png" />
        </copy>
    </target>
    
    <target name="user-guide" depends="sitebase, testdata">
        <xslt classpath="${external.dir}/serializer.jar:${external.dir}/xalan.jar" in="${source}/site/user-guide.xml" out="${site.dir}/index.html" style="docbook-xsl/xhtml/docbook.xsl">
            <xmlcatalog refid="catalogs" />
            <!--
            TODO: Add a working style.
            <param name="html.stylesheet" expression="style.css"/>
            -->
        </xslt>
        <copy file="${tests-input.dir}/valid_customers.csv" todir="${site.dir}" />
        <copy file="${tests-input.dir}/broken_customers.csv" todir="${site.dir}" />
        <copy file="${tests-input-icds.dir}/customers.csv" tofile="${site.dir}/icd_customers.csv" />
        <copy file="${tests-input-icds.dir}/customers.ods" tofile="${site.dir}/icd_customers.ods" />
        <copy file="${tests-input-icds.dir}/customers.xls" tofile="${site.dir}/icd_customers.xls" />
    </target>

    <target name="setup" description="setup project after checking it out">
        <untar compression="bzip2" src="${external.dir}/dtds.tar.bz2" dest="." />
        <untar compression="bzip2" src="${external.dir}/docbook-xsl.tar.bz2" dest="." />
    </target>
</project>
